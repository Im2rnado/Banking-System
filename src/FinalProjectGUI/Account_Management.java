/**
 *
 * @author Ibrahim, Yassin, Islam, Hatem, and Khattab
 */
package FinalProjectGUI;

import FinalProjectClasses.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import javax.swing.table.DefaultTableModel;

public class Account_Management extends javax.swing.JFrame {

    private List<Account> userAccounts;
    private Customer customer;
    private Manager manager;
    private Staff staff;

    /**
     * Creates new form Account_Management
     */
    public Account_Management(Customer customer) {
        this.customer = customer;
        this.userAccounts = customer.getAccounts();
        initComponents();
        populateAccountsTable();
        calculateTotalBalance();
    }

    public Account_Management(Manager manager) {
        this.manager = manager;
        this.userAccounts = new DatabaseManager().fetchAllAccounts();
        initComponents();
        populateAccountsTable();
        calculateTotalBalance();
    }

    public Account_Management(Staff staff) {
        this.staff = staff;
        this.userAccounts = new DatabaseManager().fetchAllAccounts();
        initComponents();
        populateAccountsTable();
        calculateTotalBalance();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        accountsPane = new javax.swing.JScrollPane();
        accountsTable = new javax.swing.JTable();
        totalBalanceLabel = new javax.swing.JLabel();
        createAccountButton = new javax.swing.JButton();
        initiateDepositButton = new javax.swing.JButton();
        returnButton = new javax.swing.JButton();
        totalBalanceField = new javax.swing.JTextField();
        exitButton = new javax.swing.JButton();
        viewDetailsButton = new javax.swing.JButton();

        jScrollPane1.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(204, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        titleLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        titleLabel.setText("Accounts Overview");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(titleLabel)
                                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(titleLabel)
                                .addContainerGap(21, Short.MAX_VALUE))
        );

        accountsTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String[]{
                    "Account ID", "Type", "Balance", "Currency"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        accountsPane.setViewportView(accountsTable);

        totalBalanceLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        totalBalanceLabel.setText("Total Balance");

        createAccountButton.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        createAccountButton.setText("Create Account");
        createAccountButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        createAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountButtonActionPerformed(evt);
            }
        });

        initiateDepositButton.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        initiateDepositButton.setText("Initiate Deposit");
        initiateDepositButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        initiateDepositButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initiateDepositButtonActionPerformed(evt);
            }
        });

        returnButton.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        returnButton.setText("Return");
        returnButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        totalBalanceField.setEditable(false);
        totalBalanceField.setFocusable(false);
        totalBalanceField.setVerifyInputWhenFocusTarget(false);
        totalBalanceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalBalanceFieldActionPerformed(evt);
            }
        });

        exitButton.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        exitButton.setText("Exit");
        exitButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        viewDetailsButton.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        viewDetailsButton.setText("View Details");
        viewDetailsButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(44, 44, 44)
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(accountsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(totalBalanceLabel)
                                                                        .addComponent(totalBalanceField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(createAccountButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(68, 68, 68)
                                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(initiateDepositButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(viewDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34))
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(accountsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addComponent(totalBalanceLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(totalBalanceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(viewDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(20, 20, 20)))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(initiateDepositButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(createAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void totalBalanceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalBalanceFieldActionPerformed
        totalBalanceField.setEditable(false);
    }//GEN-LAST:event_totalBalanceFieldActionPerformed

    private void viewDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountButtonActionPerformed
        int selectedRow = accountsTable.getSelectedRow();
        if (selectedRow >= 0) {
            String accountId = accountsTable.getValueAt(selectedRow, 0).toString();
            Account selectedAccount = userAccounts.stream()
                    .filter(account -> account.getAccountId().equals(accountId))
                    .findFirst()
                    .orElse(null);

            if (selectedAccount != null) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Account ID: " + selectedAccount.getAccountId() + "\n"
                        + "Account Type: " + selectedAccount.getAccountType() + "\n"
                        + "Balance: " + selectedAccount.getBalance() + "\n"
                        + "Currency: " + selectedAccount.getCurrency(),
                        "Account Details",
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Account details could not be retrieved.",
                        "Error",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Please select an account from the table.",
                    "No Account Selected",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_createAccountButtonActionPerformed

    private void initiateDepositButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initiateDepositButtonActionPerformed
        String targetAccountId = javax.swing.JOptionPane.showInputDialog(this,
                "Enter Account ID:",
                "Initiate Deposit",
                javax.swing.JOptionPane.QUESTION_MESSAGE);

        if (targetAccountId != null && !targetAccountId.isEmpty()) {
            String amountStr = javax.swing.JOptionPane.showInputDialog(this,
                    "Enter Amount to Deposit:",
                    "Initiate Deposit",
                    javax.swing.JOptionPane.QUESTION_MESSAGE);

            try {
                String transactionId = "TR" + UUID.randomUUID().toString().toUpperCase().substring(0, 6);
                double amount = Double.parseDouble(amountStr);
                String type = "deposit";
                Account targetAccount = new DatabaseManager().fetchAccountById(targetAccountId);
                Date date = new Date();

                Transaction Tr = new Transaction(transactionId, type, amount, targetAccount, targetAccount, date);
                System.out.println(Tr.getTransactionDetails());

                if (Tr.processTransaction()) {
                    javax.swing.JOptionPane.showMessageDialog(this,
                            "Deposit Successful!",
                            "Success",
                            javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    userAccounts = customer.getAccounts();
                    populateAccountsTable();
                    calculateTotalBalance();
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this,
                            "Deposit Failed! Check funds or account validity.",
                            "Error",
                            javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Invalid amount entered.",
                        "Error",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_initiateDepositButtonActionPerformed

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        if (customer != null) {
            Customer_Dashboard x = new Customer_Dashboard(this.customer);
            x.setVisible(true);
        } else if (manager != null) {
            Manager_Dashboard x = new Manager_Dashboard(this.manager);
            x.setVisible(true);
        } else {
            Staff_Dashboard x = new Staff_Dashboard(this.staff);
            x.setVisible(true);
        }
        dispose();
    }//GEN-LAST:event_returnButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void createAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsButtonActionPerformed
        String userId;

        if (manager != null || staff != null) {
            userId = javax.swing.JOptionPane.showInputDialog(this,
                    "Enter User ID:",
                    "Create Account",
                    javax.swing.JOptionPane.QUESTION_MESSAGE);
        } else {
            userId = customer.getUserId();
        }

        String accountType = javax.swing.JOptionPane.showInputDialog(this,
                "Enter Account Type (Savings, Current, Fixed Deposit):",
                "Create Account",
                javax.swing.JOptionPane.QUESTION_MESSAGE);

        if (accountType != null && !accountType.isEmpty()) {
            String currency = javax.swing.JOptionPane.showInputDialog(this,
                    "Enter Currency (e.g. EGP, USD, EUR):",
                    "Create Account",
                    javax.swing.JOptionPane.QUESTION_MESSAGE);

            if (currency != null && !currency.isEmpty()) {
                String initialBalanceStr = javax.swing.JOptionPane.showInputDialog(this,
                        "Enter Initial Deposit:",
                        "Create Account",
                        javax.swing.JOptionPane.QUESTION_MESSAGE);

                try {
                    String accountId = "ACC" + UUID.randomUUID().toString().toUpperCase().substring(0, 6);
                    double initialBalance = Double.parseDouble(initialBalanceStr);
                    Account newAccount = new Account(accountId, userId, accountType, initialBalance, currency);
                    new DatabaseManager().createAccount(newAccount);
                    userAccounts.add(newAccount);
                    populateAccountsTable();
                    calculateTotalBalance();
                } catch (NumberFormatException e) {
                    javax.swing.JOptionPane.showMessageDialog(this,
                            "Invalid balance entered.",
                            "Error",
                            javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_viewDetailsButtonActionPerformed

    private void populateAccountsTable() {
        DefaultTableModel model = (DefaultTableModel) accountsTable.getModel();
        model.setRowCount(0);
        for (Account account : userAccounts) {
            model.addRow(new Object[]{
                account.getAccountId(),
                account.getAccountType(),
                account.getBalance(),
                account.getCurrency()
            });
        }
    }

    private void calculateTotalBalance() {
        double totalBalance = userAccounts.stream().mapToDouble(Account::getBalance).sum();
        totalBalanceField.setText(String.valueOf(totalBalance));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Account_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Account_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Account_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Account_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Customer customer = new Customer("null", "null", "null", "null", "null", "null", "null");
                new Account_Management(customer).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane accountsPane;
    private javax.swing.JTable accountsTable;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton initiateDepositButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JButton returnButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField totalBalanceField;
    private javax.swing.JLabel totalBalanceLabel;
    private javax.swing.JButton createAccountButton;
    private javax.swing.JButton viewDetailsButton;
    // End of variables declaration//GEN-END:variables
}
